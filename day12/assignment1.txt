Q1. What is the total amount each customer spent at the restaurant?
   select customer_id ,sum(m.price) as total_spent from sales s join menu m on        
    s.product_id=m.product_id group by s.customer_id;

    +-------------+-------------+
    | customer_id | total_spent |
    +-------------+-------------+
    | A           |          76 |
    | B           |          74 |
    | C           |          36 |


Q2. How many days has each customer visited the restaurant?

mysql> select customer_id ,count(order_date) as total_days from sales group by customer_id;
+-------------+------------+
| customer_id | total_days |
+-------------+------------+
| A           |          6 |
| B           |          6 |
| C           |          3 |
+-------------+------------+
3 rows in set (0.00 sec)


Q3.What was the first item from the menu purchased by each customer?

mysql> select s.customer_id,m.product_name from sales s join menu m on s.product_id=m.product_id where order_date=( select min(order_date) from sales);
+-------------+--------------+
| customer_id | product_name |
+-------------+--------------+
| A           | sushi        |
| B           | curry        |
| A           | curry        |
| C           | ramen        |
| C           | ramen        |
+-------------+--------------+


Q4.What is the most purchased item on the menu and how many times was it purchased by all customers?
SELECT product_name FROM menu WHERE product_id = (SELECT product_id FROM sales GROUP BY product_id ORDER BY COUNT(*) DESCLIMIT 1 );


Q5.Which item was the most popular for each customer?
SELECT s1.customer_id, s1.product_id, m.product_name, COUNT(*) AS total_orders
    -> FROM sales s1
    -> JOIN menu m ON s1.product_id = m.product_id
    -> GROUP BY s1.customer_id, s1.product_id, m.product_name
    -> HAVING COUNT(*) = (
    ->     SELECT MAX(cnt)
    ->     FROM (
    ->         SELECT COUNT(*) AS cnt
    ->         FROM sales s2
    ->         WHERE s2.customer_id = s1.customer_id
    ->         GROUP BY s2.product_id
    ->     ) AS sub
    -> );

Q6.Which item was purchased first by the customer after they became a member?

mysql> SELECT s.customer_id, m2.product_name, s.order_date
    -> FROM sales s
    -> JOIN members m1 ON s.customer_id = m1.customer_id
    -> JOIN menu m2 ON s.product_id = m2.product_id
    ->   AND s.order_date = (
    ->       SELECT MIN(order_date)
    ->       FROM sales
    ->       WHERE customer_id = s.customer_id
    ->         AND order_date >= m1.join_date
    ->   );

Q7.Which item was purchased just before the customer became a member?

SELECT s.customer_id, m.product_name, s.order_date
FROM sales s
JOIN members mem ON s.customer_id = mem.customer_id
JOIN menu m ON s.product_id = m.product_id
  AND s.order_date = (
      SELECT MAX(order_date)
      FROM sales
      WHERE customer_id = s.customer_id
        AND order_date < mem.join_date
  );


Q8.What is the total items and amount spent for each member before they became a member?

SELECT s.customer_id,
       COUNT(*) AS total_items,
       SUM(m.price) AS total_amount
FROM sales s
JOIN members mem ON s.customer_id = mem.customer_id
JOIN menu m ON s.product_id = m.product_id
WHERE s.order_date < mem.join_date
GROUP BY s.customer_id;


Q9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select s.customer_id ,sum( if (m.product_name='sushi',m.price*10*2,m.price*10)) as total_spent from menu m join sales s on m.product_id=s.product_id group by s.customer_id;
+-------------+-------------+
| customer_id | total_spent |
+-------------+-------------+
| A           |         860 |
| B           |         940 |
| C           |         360 |
+-------------+-------------+
3 rows in set (0.01 sec)


Q10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?




SELECT 
  s.customer_id,
  SUM(
    IF(
      s.order_date BETWEEN mem.join_date AND DATE_ADD(mem.join_date, INTERVAL 6 DAY),
      m.price * 10 * 2,
      m.price * 10
    )
  ) AS total_points
FROM 
  sales s
JOIN 
  menu m ON s.product_id = m.product_id
JOIN 
  members mem ON s.customer_id = mem.customer_id
WHERE 
  s.order_date <= '2021-01-31'
  AND s.customer_id IN ('A', 'B')
GROUP BY 
  s.customer_id;


